{"version":3,"sources":["reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","const/param.js","actions/authActions.js","component/Home/Landing.js","component/Home/Flow.js","component/Home/Home.js","component/Navbar/Navbar.js","component/Auth/Register.js","component/Auth/Login.js","component/Dashboard/Application.js","component/Dashboard/AddApplication.js","actions/jobsActions.js","component/Dashboard/Dashboard.js","component/Footer/Footer.js","component/PrivateRoute.js","App.js","serviceWorker.js","index.js","public/home.svg","public/organisation.svg","public/interview.svg","public/job.svg"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","type","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","API_ROUTE","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","Landing","Container","Grid","container","direction","justify","alignItems","className","item","display","xs","sm","md","src","home","alt","process","Flow","fluid","organisation","interview","job","Home","useStyles","makeStyles","theme","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","backgroundColor","toolbar","flexWrap","toolbarTitle","flexGrow","color","link","spacing","connect","props","classes","AppBar","position","elevation","Toolbar","Typography","variant","noWrap","href","to","Fragment","Button","onClick","event","preventDefault","paper","paddingTop","flexDirection","avatar","secondary","main","input","submit","registerUser","userData","history","post","then","res","push","catch","err","response","data","withRouter","useState","username","setusername","password","setpassword","password2","setpassword2","email","setemail","error","seterror","useEffect","undefined","name","component","maxWidth","onSubmit","newUser","noValidate","Avatar","Alert","severity","TextField","autoComplete","required","fullWidth","id","label","InputLabelProps","InputProps","value","onChange","e","target","autoFocus","FormControlLabel","control","Checkbox","Link","loginUser","console","log","setItem","jwt_decode","emailnotfound","passwordincorrect","useRowStyles","root","Application","showDetails","setShowDetails","TableRow","TableCell","align","scope","company","stack","comment","status","Chip","icon","style","borderColor","IconButton","aria-label","size","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","Box","gutterBottom","Card","contact","applicationStatus","AddApplication","open","setOpen","handleClose","setCompany","setPosition","setStack","setLink","setContact","description","setDescription","setComment","setStatus","setError","errorMessage","setErrorMessage","handleCloseErrorMessage","reason","Snackbar","autoHideDuration","onClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","startAdornment","InputAdornment","multiline","rows","select","map","option","MenuItem","key","DialogActions","callback","newJob","author","onAddApplication","jobs","setJobs","length","get","params","pt","TableContainer","Paper","Table","TableHead","TableBody","_id","Footer","Component","rest","render","jwtToken","currentTime","Date","now","exp","window","location","App","basename","exact","path","Register","Login","Dashboard","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"gSAIQA,EAAUC,EAAQ,KAClBC,EAAe,CACnBC,iBAAiB,EACjBC,KAAM,GACNC,SAAS,GCPPH,EAAe,GCENI,cAAgB,CAC7BC,KFMe,WAAwC,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IGV0B,mBHWxB,OAAO,eACFF,EADL,CAEEL,iBAAkBH,EAAQS,EAAOE,SACjCP,KAAMK,EAAOE,UAEjB,IGjBsB,eHkBpB,OAAO,eACFH,EADL,CAEEH,SAAS,IAEb,QACE,OAAOG,IEnBbI,ODHa,WAAwC,IAA/BJ,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IEJsB,aFKpB,OAAOD,EAAOE,QAChB,QACE,OAAOH,MGHPK,EAAa,CAACC,KAQLC,EAPDC,YACZC,EAHmB,GAKnBC,YACEC,IAAe,WAAf,EAAmBN,K,yBCCRO,EATM,SAACC,GACdA,EAEAC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,eCCAC,EAHC,6CC6CHC,EAAiB,SAACC,GAC3B,MAAO,CACHlB,KJlDwB,mBImDxBC,QAASiB,IAUJC,EAAa,kBAAM,SAACC,GAE7BC,aAAaC,WAAW,YAExBZ,GAAa,GAEbU,EAASH,EAAe,O,mCCvBbM,MA1Cf,WACI,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,UAAU,cAEV,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAWC,GAAI,EAAGL,UAAU,aAC9D,yBAAKM,IAAKC,IAAMP,UAAU,gBAAgBQ,IAAI,aAElD,kBAACb,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,GAAIE,GAAI,EAAGL,UAAU,cAChC,6BACI,wBAAIA,UAAU,iBAAd,kBAA8CS,wBAC9C,uBAAGT,UAAU,uBAAb,8DAIA,6BACI,uBAAGA,UAAU,gBAAb,iHAGA,uBAAGA,UAAU,gBAAb,yIAGA,uBAAGA,UAAU,gBAAb,kDAIJ,yBAAKA,UAAU,kBACX,4BAAQA,UAAU,mBAAlB,mB,mDCsDbU,MApFf,WACI,OACI,kBAAChB,EAAA,EAAD,CAAWiB,OAAK,GACZ,kBAAChB,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,UAAU,YAEV,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,EAAGH,UAAU,gCACxB,6BACI,uBAAGA,UAAU,uBAAb,uDAGA,6BACI,uBAAGA,UAAU,gBAAb,sJAKA,uBAAGA,UAAU,gBAAb,mHAQZ,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,EAAGH,UAAU,aACxB,yBAAKM,IAAKM,IAAcZ,UAAU,gBAAgBQ,IAAI,mBAI9D,kBAACb,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,UAAU,yBAEV,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,EAAGH,UAAU,+BACxB,6BAAK,yBAAKM,IAAKO,IAAWb,UAAU,gBAAgBQ,IAAI,gBAG5D,kBAACb,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,EAAGH,UAAU,gCACxB,6BACI,uBAAGA,UAAU,uBAAb,6BAGA,6BACI,uBAAGA,UAAU,gBAAb,yFAGA,uBAAGA,UAAU,gBAAb,yIACoI,6BADpI,8FAShB,kBAACL,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXC,UAAU,8BAEV,kBAACL,EAAA,EAAD,CACAM,MAAI,EACJE,GAAI,IAEA,0CACJ,6BAAK,yBAAKG,IAAKQ,IAAKd,UAAU,qBAAqBQ,IAAI,iBCnExDO,MATf,WACI,OACI,kBAACrB,EAAA,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,4CCANsB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC,UAAW,CACPC,GAAI,CACAC,OAAQ,EACRC,QAAS,EACTC,UAAW,SAGnBC,OAAQ,CACJC,aAAa,aAAD,OAAeN,EAAMO,QAAQC,SACzCC,gBAAiB,YAErBC,QAAS,CACLC,SAAU,QAEdC,aAAc,CACVC,SAAU,EACVC,MAAO,SAEXC,KAAM,CACFb,OAAQF,EAAMgB,QAAQ,EAAG,UAsFjC,IAGeC,eAHS,SAACnE,GAAD,MAAY,CAChCD,KAAMC,EAAMD,QAEwB,CAAEsB,cAA3B8C,EArFf,SAAgBC,GACZ,IAAMC,EAAUrB,IAOhB,OACI,kBAACsB,EAAA,EAAD,CACIC,SAAS,SACTP,MAAM,UACNQ,UAAW,EACXxC,UAAWqC,EAAQd,QAEnB,kBAACkB,EAAA,EAAD,CAASzC,UAAWqC,EAAQT,SACxB,kBAACc,EAAA,EAAD,CACIC,QAAQ,KACRC,QAAM,EACN5C,UAAWqC,EAAQP,cAEnB,uBAAGe,KAAK,IAAI7C,UAAU,mBAAtB,oBAEJ,6BACI,kBAAC,IAAD,CACI2C,QAAQ,SACRG,GAAG,IACH9C,UAAU,mBAHd,YAOA,kBAAC,IAAD,CACI2C,QAAQ,SACRG,GAAG,IACH9C,UAAU,mBAHd,cAOA,kBAAC,IAAD,CACI2C,QAAQ,SACRG,GAAG,IACH9C,UAAU,mBAHd,YAQHoC,EAAMrE,KAAKJ,iBACR,kBAAC,IAAMoF,SAAP,KACI,kBAACC,EAAA,EAAD,CAAQC,QA7CN,SAACC,GACnBA,EAAMC,iBACNf,EAAM/C,cA2C0CsD,QAAQ,YAAY3C,UAAU,wBAA9D,YAKNoC,EAAMrE,KAAKJ,iBACT,kBAAC,IAAMoF,SAAP,KACI,kBAACC,EAAA,EAAD,CACIH,KAAK,YACLF,QAAQ,WACR3C,UAAU,wBAHd,YAOA,kBAACgD,EAAA,EAAD,CACIH,KAAK,SACLF,QAAQ,WACR3C,UAAU,wBAHd,e,gFC3ElBgB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkC,MAAO,CACHC,WAAYnC,EAAMgB,QAAQ,GAC1BhC,QAAS,OACToD,cAAe,SACfvD,WAAY,UAEhBwD,OAAQ,CACJnC,OAAQF,EAAMgB,QAAQ,GACtBP,gBAAiBT,EAAMO,QAAQ+B,UAAUC,MAE7CC,MAAO,CACH1B,MAAO,SAEX2B,OAAQ,CACJvC,OAAQF,EAAMgB,QAAQ,EAAG,EAAG,QAkMpC,IAKeC,gBALS,SAACnE,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAGsB,CAAEwF,aLpOd,SAACC,EAAUC,GAAX,OAAuB,SAACxE,GAChDA,EAAS,CACLpB,KJRkB,aISlBC,QAAS,KAEbW,IACKiF,KADL,UACa7E,EADb,sBAC4C2E,GACvCG,MAAK,SAACC,GAAD,OAASH,EAAQI,KAAK,aAC3BC,OAAM,SAACC,GAAD,OACH9E,EAAS,CACLpB,KJhBU,aIiBVC,QAASiG,EAAIC,SAASC,aKyNvBnC,CAA2CoC,aAnM1D,SAAkBnC,GACd,IAAMC,EAAUrB,KADK,EAEWwD,mBAAS,IAFpB,mBAEdC,EAFc,KAEJC,EAFI,OAGWF,mBAAS,IAHpB,mBAGdG,EAHc,KAGJC,EAHI,OAIaJ,mBAAS,IAJtB,mBAIdK,EAJc,KAIHC,EAJG,OAKKN,mBAAS,IALd,mBAKdO,EALc,KAKPC,EALO,OAMKR,oBAAS,GANd,mBAMdS,EANc,KAMPC,EANO,KAkCrB,OA1BAC,qBAAU,WACF/C,EAAMrE,KAAKJ,iBACXyE,EAAM0B,QAAQI,KAAK,mBAGGkB,IAAtBhD,EAAMhE,OAAOiH,WACUD,IAAvBhD,EAAMhE,OAAO2G,YACaK,IAA1BhD,EAAMhE,OAAOuG,eACcS,IAA3BhD,EAAMhE,OAAOyG,WAEbK,GAAS,KAEd,CAAC9C,EAAMhE,OAAQgE,EAAMrE,KAAMqE,EAAM0B,UAehC,kBAACpE,EAAA,EAAD,CAAW4F,UAAU,OAAOC,SAAS,MACjC,yBAAKvF,UAAWqC,EAAQe,OACpB,0BACIoC,SAhBK,SAACtC,GAClBA,EAAMC,iBACN+B,GAAS,GACT,IAAMO,EAAU,CACZJ,KAAMZ,EACNM,MAAOA,EACPJ,SAAUA,EACVE,UAAWA,GAEfzC,EAAMwB,aAAa6B,EAASrD,EAAM0B,UAQtB9D,UAAU,iBACV0F,YAAU,GAEV,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACsC,QAAS,GACrB,kBAACvC,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAASF,UAAU,UAC1C,kBAAC8F,EAAA,EAAD,CAAQ3F,UAAWqC,EAAQkB,QACvB,kBAAC,KAAD,OAEJ,kBAACb,EAAA,EAAD,CAAY4C,UAAU,KAAK3C,QAAQ,MAAnC,YAGCsC,GAAS7C,EAAMhE,OAAOiH,MACnB,kBAACO,EAAA,EAAD,CAAOC,SAAS,SACXzD,EAAMhE,OAAOiH,MAGrBJ,GAAS7C,EAAMhE,OAAO2G,OACnB,kBAACa,EAAA,EAAD,CAAOC,SAAS,SACXzD,EAAMhE,OAAO2G,OAGrBE,GAAS7C,EAAMhE,OAAOuG,UACnB,kBAACiB,EAAA,EAAD,CAAOC,SAAS,SACXzD,EAAMhE,OAAOuG,UAGrBM,GAAS7C,EAAMhE,OAAOyG,WACnB,kBAACe,EAAA,EAAD,CAAOC,SAAS,SACXzD,EAAMhE,OAAOyG,YAI1B,kBAAClF,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,IACX,kBAAC2F,EAAA,EAAD,CACIC,aAAa,QACbV,KAAK,WACL1C,QAAQ,WACRqD,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNC,gBAAiB,CACbpG,UAAWqC,EAAQqB,OAEvB2C,WAAY,CACRrG,UAAWqC,EAAQqB,OAEvB4C,MAAO7B,EACP8B,SAAU,SAACC,GAAD,OAAO9B,EAAY8B,EAAEC,OAAOH,QACtCI,WAAS,KAGjB,kBAAC/G,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,IACX,kBAAC2F,EAAA,EAAD,CACInD,QAAQ,WACRqD,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNd,KAAK,QACLU,aAAa,QACbK,gBAAiB,CACbpG,UAAWqC,EAAQqB,OAEvB2C,WAAY,CACRrG,UAAWqC,EAAQqB,OAEvB4C,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAASwB,EAAEC,OAAOH,WAG3C,kBAAC3G,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,IACX,kBAAC2F,EAAA,EAAD,CACInD,QAAQ,WACRqD,UAAQ,EACRC,WAAS,EACTZ,KAAK,WACLc,MAAM,WACNjI,KAAK,WACLgI,GAAG,WACHH,aAAa,mBACbK,gBAAiB,CACbpG,UAAWqC,EAAQqB,OAEvB2C,WAAY,CACRrG,UAAWqC,EAAQqB,OAEvB4C,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAY4B,EAAEC,OAAOH,WAG9C,kBAAC3G,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,IACX,kBAAC2F,EAAA,EAAD,CACInD,QAAQ,WACRqD,UAAQ,EACRC,WAAS,EACTZ,KAAK,YACLc,MAAM,mBACNjI,KAAK,WACLgI,GAAG,YACHH,aAAa,mBACbK,gBAAiB,CACbpG,UAAWqC,EAAQqB,OAEvB2C,WAAY,CACRrG,UAAWqC,EAAQqB,OAEvB4C,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAa0B,EAAEC,OAAOH,WAG/C,kBAAC3G,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,IACX,kBAACwG,EAAA,EAAD,CACIC,QACI,kBAACC,EAAA,EAAD,CACIP,MAAM,mBACNtE,MAAM,YAGdmE,MAAM,iFAIlB,kBAACnD,EAAA,EAAD,CACI9E,KAAK,SACL+H,WAAS,EACTtD,QAAQ,YACRX,MAAM,UACNhC,UAAWqC,EAAQsB,QALvB,WASA,kBAAChE,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,YACpB,kBAACH,EAAA,EAAD,CAAMM,MAAI,GACN,kBAAC6G,EAAA,EAAD,CAAMjE,KAAK,SAASF,QAAQ,SAA5B,6CCnMtB3B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkC,MAAO,CACHC,WAAYnC,EAAMgB,QAAQ,GAC1BhC,QAAS,OACToD,cAAe,SACfvD,WAAY,UAEhBwD,OAAQ,CACJnC,OAAQF,EAAMgB,QAAQ,GACtBP,gBAAiBT,EAAMO,QAAQ+B,UAAUC,MAE7CC,MAAO,CACH1B,MAAO,SAEX2B,OAAQ,CACJvC,OAAQF,EAAMgB,QAAQ,EAAG,EAAG,QA6HpC,IAIeC,gBAJS,SAACnE,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAEsB,CAAE2I,UN3IjB,SAAClD,GAAD,OAAc,SAACvE,GACpCA,EAAS,CACLpB,KJxBkB,aIyBlBC,QAAS,KAEbW,IACKiF,KADL,UACa7E,EADb,mBACyC2E,GACpCG,MAAK,SAACC,GACH+C,QAAQC,IAAIhD,GADD,IAIHpF,EAAUoF,EAAIK,KAAdzF,MACRU,aAAa2H,QAAQ,WAAYrI,GAEjCD,EAAaC,GAEb,IAAMO,EAAU+H,YAAWtI,GAE3BS,EAASH,EAAeC,OAE3B+E,OAAM,SAACC,GAAD,OACH9E,EAAS,CACLpB,KJ5CU,aI6CVC,QAASiG,EAAIC,SAASC,aMoHvBnC,EA7Hf,SAAeC,GACX,IAAMC,EAAUrB,KADE,EAEcwD,mBAAS,IAFvB,mBAEXG,EAFW,KAEDC,EAFC,OAGQJ,mBAAS,IAHjB,mBAGXO,EAHW,KAGJC,EAHI,OAIQR,mBAAS,MAJjB,mBAIXS,EAJW,KAIJC,EAJI,KA8BlB,OAxBAC,qBAAU,WAEF/C,EAAMrE,KAAKJ,iBACXyE,EAAM0B,QAAQI,KAAK,mBAGIkB,IAAvBhD,EAAMhE,OAAO2G,YACaK,IAA1BhD,EAAMhE,OAAOuG,eACkBS,IAA/BhD,EAAMhE,OAAOgJ,oBACsBhC,IAAnChD,EAAMhE,OAAOiJ,mBAEbnC,GAAS,KAEd,CAAC9C,EAAMhE,OAAQgE,EAAMrE,KAAKJ,gBAAiByE,EAAM0B,UAYhD,kBAACpE,EAAA,EAAD,CAAW4F,UAAU,OAAOC,SAAS,MACjC,yBAAKvF,UAAWqC,EAAQe,OACpB,0BACIoC,SAbK,SAACtC,GAClBA,EAAMC,iBACN,IAAMU,EAAW,CACbkB,MAAOA,EACPJ,SAAUA,GAEdvC,EAAM2E,UAAUlD,IAQJ7D,UAAU,iBACV0F,YAAU,GAEV,kBAAC/F,EAAA,EAAD,CAAMC,WAAS,EAACsC,QAAS,GACrB,kBAACvC,EAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAASF,UAAU,UAC1C,kBAAC8F,EAAA,EAAD,CAAQ3F,UAAWqC,EAAQkB,QACvB,kBAAC,KAAD,OAEJ,kBAACb,EAAA,EAAD,CAAY4C,UAAU,KAAK3C,QAAQ,MAAnC,SAGCsC,GACG,kBAACW,EAAA,EAAD,CAAOC,SAAS,SACXzD,EAAMhE,OAAO2G,MACb3C,EAAMhE,OAAOuG,SACbvC,EAAMhE,OAAOiJ,kBACbjF,EAAMhE,OAAOgJ,gBAI1B,kBAACzH,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,IACX,kBAAC2F,EAAA,EAAD,CACInD,QAAQ,WACRqD,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNd,KAAK,QACLe,gBAAiB,CACbpG,UAAWqC,EAAQqB,OAEvB2C,WAAY,CACRrG,UAAWqC,EAAQqB,OAEvB4C,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAASwB,EAAEC,OAAOH,WAG3C,kBAAC3G,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,IACX,kBAAC2F,EAAA,EAAD,CACInD,QAAQ,WACRqD,UAAQ,EACRC,WAAS,EACTZ,KAAK,WACLc,MAAM,WACNjI,KAAK,WACLgI,GAAG,WACHH,aAAa,mBACbK,gBAAiB,CACbpG,UAAWqC,EAAQqB,OAEvB2C,WAAY,CACRrG,UAAWqC,EAAQqB,OAEvB4C,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAY4B,EAAEC,OAAOH,YAIlD,kBAACtD,EAAA,EAAD,CACI9E,KAAK,SACL+H,WAAS,EACTtD,QAAQ,YACRX,MAAM,UACNhC,UAAWqC,EAAQsB,QALvB,SASA,kBAAChE,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAQ,YACpB,kBAACH,EAAA,EAAD,CAAMM,MAAI,GACN,kBAAC6G,EAAA,EAAD,CAAMjE,KAAK,SAASF,QAAQ,SAA5B,4C,yNCvHtB2E,GAAerG,YAAW,CAC5BsG,KAAM,CACF,QAAS,CACL/F,aAAc,YAqHXgG,OAhHf,SAAqBpF,GAAQ,IAAD,EACAoC,mBAASpC,EAAMnC,MADf,mBACjBA,EADiB,aAEcuE,oBAAS,IAFvB,mBAEjBiD,EAFiB,KAEJC,EAFI,KAGlBrF,EAAUiF,KAEhB,OACI,kBAAC,IAAMvE,SAAP,KACI,kBAAC4E,GAAA,EAAD,CAAU3H,UAAWqC,EAAQkF,MACzB,kBAACK,GAAA,EAAD,CAAWC,MAAM,SAASvC,UAAU,KAAKwC,MAAM,QAC1C7H,EAAK8H,SAEV,kBAACH,GAAA,EAAD,CAAWC,MAAM,UAAU5H,EAAKsC,UAChC,kBAACqF,GAAA,EAAD,CAAWC,MAAM,UAAU5H,EAAK+H,OAChC,kBAACJ,GAAA,EAAD,CAAWC,MAAM,UAAU5H,EAAKgI,SAChC,kBAACL,GAAA,EAAD,CAAWC,MAAM,UACI,IAAhB5H,EAAKiI,QAAgB,kBAACC,GAAA,EAAD,CAClBhC,MAAM,iBACNiC,KAAM,kBAAC,KAAD,MACNzF,QAAQ,aAEK,IAAhB1C,EAAKiI,QAAgB,kBAACC,GAAA,EAAD,CAClBhC,MAAM,aACNiC,KAAM,kBAAC,KAAD,MACNzF,QAAQ,WACRX,MAAM,YAEO,IAAhB/B,EAAKiI,QAAgB,kBAACC,GAAA,EAAD,CAClBhC,MAAM,gBACNiC,KAAM,kBAAC,KAAD,CAAcC,MAAO,CAACrG,MAAM,aAClCW,QAAQ,WACR0F,MAAO,CAACrG,MAAM,UAAWsG,YAAa,aAEzB,IAAhBrI,EAAKiI,QAAgB,kBAACC,GAAA,EAAD,CAClBhC,MAAM,YACNiC,KAAM,kBAAC,KAAD,CAAeC,MAAO,CAACrG,MAAM,aACnCW,QAAQ,WACR0F,MAAO,CAACrG,MAAM,UAAWsG,YAAa,aAEzB,IAAhBrI,EAAKiI,QAAgB,kBAACC,GAAA,EAAD,CAClBhC,MAAM,YACNiC,KAAM,kBAAC,KAAD,CAAaC,MAAO,CAAErG,MAAO,aACnCW,QAAQ,WACR0F,MAAO,CAACrG,MAAM,UAAWsG,YAAa,cAG9C,kBAACV,GAAA,EAAD,KACI,kBAACW,GAAA,EAAD,CACIC,aAAW,aACXC,KAAK,QACLxF,QAAS,kBAAMyE,GAAgBD,KAE9BA,EACG,kBAAC,KAAD,MAEA,kBAAC,KAAD,SAKhB,kBAACE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIS,MAAO,CAAEK,cAAe,EAAGrF,WAAY,GACvCsF,QAAS,GAET,kBAACC,GAAA,EAAD,CAAUC,GAAIpB,EAAaqB,QAAQ,OAAOC,eAAa,GACnD,kBAACC,GAAA,EAAD,CAAK5H,OAAQ,GACT,kBAACsB,EAAA,EAAD,CACIC,QAAQ,KACRsG,cAAY,EACZ3D,UAAU,OAHd,WAOA,kBAAC4D,GAAA,EAAD,KACKjJ,EAAK8H,QACL9H,EAAKsC,SACLtC,EAAK+H,MACL/H,EAAKgC,KACLhC,EAAKkJ,e,yLCrFtC,SAASvD,GAAMxD,GACX,OAAO,kBAAC,IAAD,eAAUI,UAAW,EAAGG,QAAQ,UAAaP,IAGxD,IAAMgH,GAAoB,CACtB,CACI9C,MAAO,IACPH,MAAO,kBAEX,CACIG,MAAO,IACPH,MAAO,cAEX,CACIG,MAAO,IACPH,MAAO,iBAEX,CACIG,MAAO,IACPH,MAAO,aAEX,CACIG,MAAO,IACPH,MAAO,eAkRAkD,OA9Qf,SAAwBjH,GAAQ,IAAD,EAEHoC,oBAAS,GAFN,mBAEpB8E,EAFoB,KAEdC,EAFc,KAQrBC,EAAc,WAChBD,GAAQ,IATe,EAYG/E,mBAAS,IAZZ,mBAYpBuD,EAZoB,KAYX0B,EAZW,OAaKjF,mBAAS,IAbd,mBAapBjC,EAboB,KAaVmH,EAbU,OAcDlF,mBAAS,IAdR,mBAcpBwD,EAdoB,KAcb2B,EAda,OAeHnF,mBAAS,IAfN,mBAepBvC,EAfoB,KAed2H,EAfc,OAgBGpF,mBAAS,IAhBZ,mBAgBpB2E,EAhBoB,KAgBXU,EAhBW,OAiBWrF,mBAAS,IAjBpB,mBAiBpBsF,EAjBoB,KAiBPC,EAjBO,OAkBGvF,mBAAS,IAlBZ,mBAkBpByD,EAlBoB,KAkBX+B,EAlBW,OAmBCxF,mBAAS,KAnBV,mBAmBpB0D,EAnBoB,KAmBZ+B,EAnBY,OAoBDzF,oBAAS,GApBR,mBAoBpBS,EApBoB,KAoBbiF,EApBa,OAqBa1F,mBAAS,IArBtB,mBAqBpB2F,EArBoB,KAqBNC,EArBM,KAuBrBC,GAA0B,SAACnH,EAAOoH,GACrB,cAAXA,GAIJJ,GAAS,IAwEb,OACI,kBAAC,IAAMnH,SAAP,KACI,kBAACC,EAAA,EAAD,CACIL,QAAQ,YACRX,MAAM,UACNiB,QArGY,WACpBsG,GAAQ,KAiGJ,KAOA,kBAACgB,GAAA,EAAD,CAAUjB,KAAMrE,EAAOuF,iBAAkB,IAAMC,QAASJ,IACpD,kBAAC,GAAD,CAAOI,QAASJ,GAAyBxE,SAAS,SAC7CsE,IAGT,kBAACO,GAAA,EAAD,CACIpB,KAAMA,EACNmB,QAASjB,EACTmB,kBAAgB,qBAEhB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,qBAAhB,aACA,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,wBACA,kBAAChF,EAAA,EAAD,CACIY,WAAS,EACTtF,OAAO,QACP8E,GAAG,UACHC,MAAM,UACNjI,KAAK,OACLmI,WAAY,CACR0E,eACI,kBAACC,GAAA,EAAD,CAAgBzI,SAAS,SACrB,kBAAC,KAAD,QAIZ0D,WAAS,EACTK,MAAOyB,EACPxB,SAzGQ,SAACrD,GACzBuG,EAAWvG,EAAMuD,OAAOH,UA0GZ,kBAACR,EAAA,EAAD,CACIY,WAAS,EACTtF,OAAO,QACP8E,GAAG,WACHC,MAAM,WACNjI,KAAK,OACL+H,WAAS,EACTI,WAAY,CACR0E,eACI,kBAACC,GAAA,EAAD,CAAgBzI,SAAS,SACrB,kBAAC,KAAD,QAIZ+D,MAAO/D,EACPgE,SAtHS,SAACrD,GAC1BwG,EAAYxG,EAAMuD,OAAOH,UAwHb,kBAAC3G,EAAA,EAAD,CAAMC,WAAS,EAACsC,QAAS,GACrB,kBAACvC,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,GAAIC,GAAI,GACnB,kBAAC0F,EAAA,EAAD,CACIY,WAAS,EACTtF,OAAO,QACP8E,GAAG,QACHC,MAAM,QACNjI,KAAK,OACLmI,WAAY,CACR0E,eACI,kBAACC,GAAA,EAAD,CAAgBzI,SAAS,SACrB,kBAAC,KAAD,QAIZ+D,MAAO0B,EACPzB,SArIF,SAACrD,GACvByG,EAASzG,EAAMuD,OAAOH,WAuIN,kBAAC3G,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,GAAIC,GAAI,GACnB,kBAAC0F,EAAA,EAAD,CACIY,WAAS,EACTtF,OAAO,QACP8E,GAAG,OACHC,MAAM,OACNjI,KAAK,OACLmI,WAAY,CACR0E,eACI,kBAACC,GAAA,EAAD,CAAgBzI,SAAS,SACrB,kBAAC,KAAD,QAIZ+D,MAAOrE,EACPsE,SAnJH,SAACrD,GACtB0G,EAAQ1G,EAAMuD,OAAOH,WAqJL,kBAAC3G,EAAA,EAAD,CAAMM,MAAI,EAACE,GAAI,GAAIC,GAAI,GACnB,kBAAC0F,EAAA,EAAD,CACIY,WAAS,EACTtF,OAAO,QACP8E,GAAG,UACHC,MAAM,UACNjI,KAAK,OACLmI,WAAY,CACR0E,eACI,kBAACC,GAAA,EAAD,CAAgBzI,SAAS,SACrB,kBAAC,KAAD,QAIZ+D,MAAO6C,EACP5C,SAjKA,SAACrD,GACzB2G,EAAW3G,EAAMuD,OAAOH,YAqKZ,kBAACR,EAAA,EAAD,CACIY,WAAS,EACTtF,OAAO,QACP8E,GAAG,cACHC,MAAM,cACNjI,KAAK,OACL+H,WAAS,EACTgF,WAAS,EACTC,KAAM,EACNvI,QAAQ,WACR2D,MAAOwD,EACPvD,SA7KY,SAACrD,GAC7B6G,EAAe7G,EAAMuD,OAAOH,UA+KhB,kBAACR,EAAA,EAAD,CACIY,WAAS,EACTtF,OAAO,QACP8E,GAAG,UACHC,MAAM,UACNjI,KAAK,OACL+H,WAAS,EACTK,MAAO2B,EACP1B,SApLQ,SAACrD,GACzB8G,EAAW9G,EAAMuD,OAAOH,UAqLZ,kBAACR,EAAA,EAAD,CACIY,WAAS,EACTyE,QAAM,EACN/J,OAAO,QACP8E,GAAG,SACHC,MAAM,SACNjI,KAAK,OACLoI,MAAO4B,EACP3B,SA1LO,SAACrD,GACxB+G,EAAU/G,EAAMuD,OAAOH,QA0LPL,WAAS,GAERmD,GAAkBgC,KAAI,SAACC,GAAD,OACnB,kBAACC,GAAA,EAAD,CAAUC,IAAKF,EAAO/E,MAAOA,MAAO+E,EAAO/E,OACtC+E,EAAOlF,YAKxB,kBAACqF,GAAA,EAAD,KACI,kBAACxI,EAAA,EAAD,CAAQC,QAASuG,EAAaxH,MAAM,WAApC,UAGA,kBAACgB,EAAA,EAAD,CAAQC,QApMQ,SAACC,GAC7BA,EAAMC,iBACN,IChHemB,EAAMmH,EDgHfC,EAAS,CACXC,OAAQvJ,EAAMxE,KAAKsI,GACnB6B,QAASA,EACTxF,SAAUA,EACVyF,MAAOA,EACP/F,KAAMA,EACNkH,QAASA,EACTW,YAAaA,EACb7B,QAASA,EACTC,OAAQA,GCzHG5D,ED2HRoH,EC3HcD,ED2HN,SAACxH,GACZ+C,QAAQC,IAAIhD,GACO,MAAfA,EAAIiE,QACJlB,QAAQC,IAAIhD,EAAIK,KAAKW,OACrBiF,GAAS,GACTE,EAAgBnG,EAAIK,KAAKW,QAEL,MAAfhB,EAAIiE,SACTlB,QAAQC,IAAI,YACZuC,IACAC,EAAW,IACXC,EAAY,IACZC,EAAS,IACTC,EAAQ,IACRC,EAAW,IACXE,EAAe,IACfC,EAAW,IACXC,EAAU,IACV7H,EAAMwJ,qBC3IlB9M,IAAMiF,KAAN,UAAc7E,EAAd,gBACA,CACI,OAAWoF,EAAKqH,OAChB,QAAYrH,EAAKyD,QACjB,SAAYzD,EAAK/B,SACjB,MAAS+B,EAAK0D,MACd,KAAQ1D,EAAKrC,KACb,QAAWqC,EAAK6E,QAChB,YAAe7E,EAAKwF,YACpB,QAAWxF,EAAK2D,QAChB,OAAU3D,EAAK4D,SAGlBlE,MAAK,SAAAK,GAEJ2C,QAAQC,IAAI5C,GACW,MAApBA,EAAS6D,QACVuD,EAASpH,MAGZF,OAAM,SAAAC,GAEL4C,QAAQC,IAAI7C,EAAIC,UAChBoH,EAASrH,EAAIC,cDyR2CrC,MAAM,WAAhD,2B,kDErNpB,IAGeG,gBAHS,SAACnE,GAAD,MAAY,CAChCD,KAAMC,EAAMD,QAEDoE,EAhFf,SAAmBC,GAAQ,IACfxE,EAASwE,EAAMrE,KAAfH,KADc,EAGE4G,mBAAS,IAHX,mBAGfqH,EAHe,KAGTC,EAHS,KAiBtB,OARA3G,qBAAU,WDIL,IAAiBb,EAAMmH,ECHJ,IAAhBI,EAAKE,SDGSzH,ECFN1G,EDEY6N,ECFN,SAACxH,GACX6H,EAAQ7H,IDEpBnF,IAAMkN,IAAN,UAAa9M,EAAb,YACA,CACI+M,OAAS,CACPN,OAASrH,EAAK4B,MAInBlC,MAAK,SAAAK,GAEmB,MAApBA,EAAS6D,QACVuD,EAASpH,EAASC,SAGrBH,OAAM,SAAAC,GAEL4C,QAAQC,IAAI7C,SCdX,CAACyH,EAAMjO,IAGN,kBAACoL,GAAA,EAAD,CAAKkD,GAAI,GACL,kBAACxM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,SACXC,UAAU,QALd,SAOWpC,EAAKyH,MAGhB,kBAAC1F,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,UACXC,UAAU,QAEV,gDACA,kBAACL,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,WACRC,WAAW,UAEX,kBAAC,GAAD,CAAgBnC,KAAMA,EAAMgO,iBAvChB,WAC5BE,EAAQ,UA0CJ,kBAACpM,EAAA,EAAD,KACA,kBAACyM,GAAA,EAAD,CAAgB7G,UAAW8G,MACvB,kBAACC,GAAA,EAAD,CAAO7D,aAAW,qBACd,kBAAC8D,GAAA,EAAD,KACA,kBAAC3E,GAAA,EAAD,KAEI,kBAACC,GAAA,EAAD,CAAWC,MAAM,UAAjB,WACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,SACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,WACA,kBAACD,GAAA,EAAD,CAAWC,MAAM,UAAjB,UACA,kBAACD,GAAA,EAAD,QAGJ,kBAAC2E,GAAA,EAAD,KACCV,EAAKT,KAAI,SAACnL,GAAD,OACN,kBAAC,GAAD,CAAasL,IAAKtL,EAAKuM,IAAKvM,KAAMA,eCvE3CwM,OAVf,WACI,OACI,kBAAC/M,EAAA,EAAD,CAAWM,UAAU,UACjB,6C,UCgBGmC,gBAHS,SAACnE,GAAD,MAAY,CAChCD,KAAMC,EAAMD,QAEDoE,EAlBM,SAAC,GAAD,IAAcuK,EAAd,EAAGpH,UAAsBvH,EAAzB,EAAyBA,KAAS4O,EAAlC,4CACjB,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,SAACxK,GAAD,OACqB,IAAzBrE,EAAKJ,gBACD,kBAAC+O,EAActK,GAEf,kBAAC,IAAD,CAAUU,GAAG,kBCO7B,GAAIvD,aAAasN,SAAU,CAEvB,IAAMhO,GAAQU,aAAasN,SAC3BjO,EAAaC,IAEb,IAAMO,GAAU+H,YAAWtI,IAE3BN,EAAMe,SAASH,EAAeC,KAE9B,IAAM0N,GAAcC,KAAKC,MAAQ,IAC7B5N,GAAQ6N,IAAMH,KAEdvO,EAAMe,SAASD,KAEf6N,OAAOC,SAAStK,KAAO,WAyBhBuK,OArBf,WACI,OACI,kBAAC,IAAD,CAAU7O,MAAOA,GACb,kBAAC,IAAD,CAAQ8O,SAAU5M,uBACd,yBAAKT,UAAU,OACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAOsN,OAAK,EAACC,KAAM9M,uBAA8B6E,UAAWvE,IAC5D,kBAAC,IAAD,CAAOuM,OAAK,EAACC,KAAM9M,+BAAuC6E,UAAWkI,KACrE,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAM9M,4BAAoC6E,UAAWmI,KAClE,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAcH,OAAK,EAACC,KAAM9M,gCAAwC6E,UAAWoI,OAGrF,kBAAC,GAAD,UCtCAC,QACW,cAA7BT,OAAOC,SAASS,UAEe,UAA7BV,OAAOC,SAASS,UAEhBV,OAAOC,SAASS,SAASC,MACvB,2DCZNC,IAASlB,OACP,kBAAC,IAAMmB,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpK,MAAK,SAAAqK,GACJA,EAAaC,gBAEdnK,OAAM,SAAAc,GACL+B,QAAQ/B,MAAMA,EAAMsJ,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.ef5cabe1.chunk.js","sourcesContent":["import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n  )\r\n);\r\nexport default store;","import axios from \"axios\";\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        // Apply authorization token to every request if logged in\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        // Delete auth header\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\nexport default setAuthToken;\r\n","let API_ROUTE\r\n\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    API_ROUTE = 'http://localhost:5000/'\r\n} else {\r\n    API_ROUTE = 'https://search-job-tool-api.herokuapp.com/'\r\n}\r\n\r\nexport default API_ROUTE","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport API_ROUTE from \"../const/param\";\r\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData, history) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"\",\r\n    })\r\n    axios\r\n        .post(`${API_ROUTE}api/users/register`, userData)\r\n        .then((res) => history.push(\"/login\")) // re-direct to login on successful register\r\n        .catch((err) =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data,\r\n            })\r\n        );\r\n};\r\n// Login - get user token\r\nexport const loginUser = (userData) => (dispatch) => {\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: \"\",\r\n    })\r\n    axios\r\n        .post(`${API_ROUTE}api/users/login`, userData)\r\n        .then((res) => {\r\n            console.log(res)\r\n            // Save to localStorage\r\n            // Set token to localStorage\r\n            const { token } = res.data;\r\n            localStorage.setItem(\"jwtToken\", token);\r\n            // Set token to Auth header\r\n            setAuthToken(token);\r\n            // Decode token to get user data\r\n            const decoded = jwt_decode(token);\r\n            // Set current user\r\n            dispatch(setCurrentUser(decoded));\r\n        })\r\n        .catch((err) =>\r\n            dispatch({\r\n                type: GET_ERRORS,\r\n                payload: err.response.data,\r\n            })\r\n        );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = (decoded) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded,\r\n    };\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n    return {\r\n        type: USER_LOADING,\r\n    };\r\n};\r\n// Log user out\r\nexport const logoutUser = () => (dispatch) => {\r\n    // Remove token from local storage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header for future requests\r\n    setAuthToken(false);\r\n    // Set current user to empty object {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};\r\n","import React from \"react\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport home from '../../public/home.svg';\r\n\r\nfunction Landing() {\r\n    return (\r\n        <Container>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className=\"fullscreen\"\r\n            >\r\n                <Grid item display={{ xs: 'none', sm: 'block' }} md={7} className=\"left-wrap\">\r\n                    <img src={home} className=\"landing-image\" alt=\"landing\" />\r\n                </Grid>\r\n                <Grid item xs={12} md={5} className=\"right-wrap\">\r\n                    <div>\r\n                        <h2 className=\"landing-title\">Search Job Tool{process.env.PUBLIC_URL + '/'}</h2>\r\n                        <p className=\"landing-strong-text\">\r\n                            L'outil qui vous accompagne dans votre recherche\r\n                            d'emploi.\r\n                        </p>\r\n                        <div>\r\n                            <p className=\"landing-text\">\r\n                                Search Job Tool révolutionne la recherche de l'emploi et vous accompagne dans cette démarche solitaire.\r\n                            </p>\r\n                            <p className=\"landing-text\">\r\n                            Votre meilleur compagnon pour vous retrouvez parmi la multitude d'offres et vous aider à saisir l'opportunité de vos rêves !\r\n                            </p>\r\n                            <p className=\"landing-text\">\r\n                                SJT facilite votre organisation personnelle !\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"landing-button\">\r\n                            <button className=\"button-gradient\">Start Now</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\nimport organisation from '../../public/organisation.svg';\r\nimport interview from '../../public/interview.svg';\r\nimport job from '../../public/job.svg';\r\n\r\nfunction Flow() {\r\n    return (\r\n        <Container fluid>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className=\"bg-dark2\"\r\n            >\r\n                <Grid item xs={4} className=\"right-wrap landing-card-text\">\r\n                    <div>\r\n                        <p className=\"landing-strong-text\">\r\n                            Une meilleure organisation pour un meilleur suivi !\r\n                        </p>\r\n                        <div>\r\n                            <p className=\"landing-text\">\r\n                                Suiver facilement l'état de vos candidatures !\r\n                                Améliorer votre suivi personnel et gagner en\r\n                                efficacité dans chacune de vos candidatures !\r\n                            </p>\r\n                            <p className=\"landing-text\">\r\n                                Ajouter une trace de votre candidature, vérifier\r\n                                l'état de vos candidatures, retrouver le bon\r\n                                contact.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={8} className=\"left-wrap\">\r\n                    <img src={organisation} className=\"landing-image\" alt=\"organisation\" />\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className=\"bg-dark2 landing-card\"\r\n            >\r\n                <Grid item xs={4} className=\"left-wrap landing-card-text\">\r\n                    <div><img src={interview} className=\"landing-image\" alt=\"interview\"/></div>\r\n                   \r\n                </Grid>\r\n                <Grid item xs={8} className=\"right-wrap landing-card-text\">\r\n                    <div>\r\n                        <p className=\"landing-strong-text\">\r\n                            Gagner en efficacité !\r\n                        </p>\r\n                        <div>\r\n                            <p className=\"landing-text\">\r\n                                Soyez mieux préparer en ayant sous la main toutes les informations nécessaires.\r\n                            </p>\r\n                            <p className=\"landing-text\">\r\n                                Todo : dataviz(repartition des candidatures par statut), calendrier rendez-vous, espace interview (card de questions à préparer)<br></br>\r\n                                Bonus : intégration api indeed etc, espace recruteur, espace offre, espace cvtheque\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                className=\"bg-dark2 landing-card-foot\"\r\n            >\r\n                <Grid\r\n                item\r\n                xs={12}\r\n                >\r\n                    <div>Success !</div>\r\n                <div><img src={job} className=\"landing-card-image\" alt=\"success\"/></div>\r\n                </Grid>\r\n                \r\n                \r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Flow;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Landing from \"./Landing\";\r\nimport Flow from \"./Flow\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Landing/>\r\n            <Flow/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \"@global\": {\r\n        ul: {\r\n            margin: 0,\r\n            padding: 0,\r\n            listStyle: \"none\",\r\n        },\r\n    },\r\n    appBar: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n        backgroundColor: \"#222431 \",\r\n    },\r\n    toolbar: {\r\n        flexWrap: \"wrap\",\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n        color: \"white\",\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    },\r\n}));\r\n\r\nfunction Navbar(props) {\r\n    const classes = useStyles();\r\n\r\n    const onLogoutClick = (event) => {\r\n        event.preventDefault();\r\n        props.logoutUser();\r\n    };\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            color=\"default\"\r\n            elevation={0}\r\n            className={classes.appBar}\r\n        >\r\n            <Toolbar className={classes.toolbar}>\r\n                <Typography\r\n                    variant=\"h6\"\r\n                    noWrap\r\n                    className={classes.toolbarTitle}\r\n                >\r\n                    <a href=\"/\" className=\"navbar nav-menu\">Job Search Tool</a>\r\n                </Typography>\r\n                <nav>\r\n                    <Link\r\n                        variant=\"button\"\r\n                        to=\"/\"\r\n                        className=\"navbar nav-menu\"\r\n                    >\r\n                        Features\r\n                    </Link>\r\n                    <Link\r\n                        variant=\"button\"\r\n                        to=\"/\"\r\n                        className=\"navbar nav-menu\"\r\n                    >\r\n                        Enterprise\r\n                    </Link>\r\n                    <Link\r\n                        variant=\"button\"\r\n                        to=\"/\"\r\n                        className=\"navbar nav-menu\"\r\n                    >\r\n                        Support\r\n                    </Link>\r\n                </nav>\r\n                {props.auth.isAuthenticated &&\r\n                    <React.Fragment>\r\n                        <Button onClick={onLogoutClick} variant=\"contained\" className=\"navbar navbar-button\">\r\n                            Logout\r\n                        </Button>\r\n                    </React.Fragment>\r\n                }\r\n                {!props.auth.isAuthenticated &&\r\n                    <React.Fragment>\r\n                        <Button\r\n                            href=\"/register\"\r\n                            variant=\"outlined\"\r\n                            className=\"navbar navbar-button\"\r\n                        >\r\n                            Register\r\n                        </Button>\r\n                        <Button\r\n                            href=\"/login\"\r\n                            variant=\"outlined\"\r\n                            className=\"navbar navbar-button\"\r\n                        >\r\n                            Login\r\n                        </Button>\r\n                    </React.Fragment>\r\n                    \r\n                }\r\n                \r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { logoutUser })(Navbar);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    Container,\r\n    Grid,\r\n    TextField,\r\n    Avatar,\r\n    Button,\r\n    Checkbox,\r\n    Link,\r\n    Typography,\r\n    FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        paddingTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    input: {\r\n        color: \"white\",\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Register(props) {\r\n    const classes = useStyles();\r\n    const [username, setusername] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [password2, setpassword2] = useState(\"\");\r\n    const [email, setemail] = useState(\"\");\r\n    const [error, seterror] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.auth.isAuthenticated) {\r\n            props.history.push(\"/dashboard\");\r\n        }\r\n        if (\r\n            props.errors.name !== undefined ||\r\n            props.errors.email !== undefined ||\r\n            props.errors.password !== undefined ||\r\n            props.errors.password2 !== undefined\r\n        ) {\r\n            seterror(true);\r\n        }\r\n    }, [props.errors, props.auth, props.history]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        seterror(false);\r\n        const newUser = {\r\n            name: username,\r\n            email: email,\r\n            password: password,\r\n            password2: password2,\r\n        };\r\n        props.registerUser(newUser, props.history);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    className=\"form form-auth\"\r\n                    noValidate\r\n                >\r\n                    <Grid container spacing={2}>\r\n                        <Grid container alignItems=\"center\" direction=\"column\">\r\n                            <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Register\r\n                            </Typography>\r\n                            {error && props.errors.name && (\r\n                                <Alert severity=\"error\">\r\n                                    {props.errors.name}\r\n                                </Alert>\r\n                            )}\r\n                            {error && props.errors.email && (\r\n                                <Alert severity=\"error\">\r\n                                    {props.errors.email}\r\n                                </Alert>\r\n                            )}\r\n                            {error && props.errors.password && (\r\n                                <Alert severity=\"error\">\r\n                                    {props.errors.password}\r\n                                </Alert>\r\n                            )}\r\n                            {error && props.errors.password2 && (\r\n                                <Alert severity=\"error\">\r\n                                    {props.errors.password2}\r\n                                </Alert>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"uname\"\r\n                                name=\"username\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                InputLabelProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                InputProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                value={username}\r\n                                onChange={(e) => setusername(e.target.value)}\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                                InputLabelProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                InputProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                value={email}\r\n                                onChange={(e) => setemail(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                InputLabelProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                InputProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                value={password}\r\n                                onChange={(e) => setpassword(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password2\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"password2\"\r\n                                autoComplete=\"confirm-password\"\r\n                                InputLabelProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                InputProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                value={password2}\r\n                                onChange={(e) => setpassword2(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        value=\"allowExtraEmails\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    Container,\r\n    Grid,\r\n    TextField,\r\n    Avatar,\r\n    Button,\r\n    Link,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        paddingTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    input: {\r\n        color: \"white\",\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n    const [password, setpassword] = useState(\"\");\r\n    const [email, setemail] = useState(\"\");\r\n    const [error, seterror] = useState(null);\r\n\r\n    useEffect(() => {\r\n\t\t\r\n        if (props.auth.isAuthenticated) {\r\n            props.history.push(\"/dashboard\");\r\n        }\r\n        if (\r\n            props.errors.email !== undefined ||\r\n            props.errors.password !== undefined ||\r\n            props.errors.emailnotfound !== undefined ||\r\n            props.errors.passwordincorrect !== undefined\r\n        ) {\r\n            seterror(true);\r\n        }\r\n    }, [props.errors, props.auth.isAuthenticated, props.history]);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const userData = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        props.loginUser(userData);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.paper}>\r\n                <form\r\n                    onSubmit={handleSubmit}\r\n                    className=\"form form-auth\"\r\n                    noValidate\r\n                >\r\n                    <Grid container spacing={2}>\r\n                        <Grid container alignItems=\"center\" direction=\"column\">\r\n                            <Avatar className={classes.avatar}>\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                Login\r\n                            </Typography>\r\n                            {error && (\r\n                                <Alert severity=\"error\">\r\n                                    {props.errors.email}\r\n                                    {props.errors.password}\r\n                                    {props.errors.passwordincorrect}\r\n                                    {props.errors.emailnotfound}\r\n                                </Alert>\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                InputLabelProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                InputProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                value={email}\r\n                                onChange={(e) => setemail(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                InputLabelProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                InputProps={{\r\n                                    className: classes.input,\r\n                                }}\r\n                                value={password}\r\n                                onChange={(e) => setpassword(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link href=\"/login\" variant=\"body2\">\r\n                                Already have an account? Sign in\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Card,\r\n    Collapse,\r\n    IconButton,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    Typography,\r\n    Chip\r\n} from \"@material-ui/core\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport ReportProblemIcon from '@material-ui/icons/ReportProblem';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        \"& > *\": {\r\n            borderBottom: \"unset\",\r\n        },\r\n    },\r\n});\r\n\r\nfunction Application(props) {\r\n    const [item, setItem] = useState(props.item);\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                <TableCell align=\"center\" component=\"th\" scope=\"item\">\r\n                    {item.company}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{item.position}</TableCell>\r\n                <TableCell align=\"center\">{item.stack}</TableCell>\r\n                <TableCell align=\"center\">{item.comment}</TableCell>\r\n                <TableCell align=\"center\">\r\n                    {item.status === 0 && <Chip\r\n                        label=\"Non postulé\"\r\n                        icon={<ReportProblemIcon />}\r\n                        variant=\"outlined\"\r\n                    />}\r\n                    {item.status === 1 && <Chip\r\n                        label=\"En attente\"\r\n                        icon={<HourglassEmptyIcon />}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                    />}\r\n                    {item.status === 2 && <Chip\r\n                        label=\"En discussion\"\r\n                        icon={<FeedbackIcon style={{color:'#ffb74d'}}/>}\r\n                        variant=\"outlined\"\r\n                        style={{color:'#ffb74d', borderColor: '#ffb74d'}}\r\n                    />}\r\n                    {item.status === 3 && <Chip\r\n                        label=\"Refusé\"\r\n                        icon={<ThumbDownIcon style={{color:'#f44336'}}/>}\r\n                        variant=\"outlined\"\r\n                        style={{color:'#f44336', borderColor: '#f44336'}}\r\n                    />}\r\n                    {item.status === 4 && <Chip\r\n                        label=\"Validé\"\r\n                        icon={<ThumbUpIcon style={{ color: \"#4caf50\" }}/>}\r\n                        variant=\"outlined\"\r\n                        style={{color:'#4caf50', borderColor: '#4caf50'}}\r\n                    />}\r\n                </TableCell>\r\n                <TableCell>\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        onClick={() => setShowDetails(!showDetails)}\r\n                    >\r\n                        {showDetails ? (\r\n                            <KeyboardArrowUpIcon />\r\n                        ) : (\r\n                            <KeyboardArrowDownIcon />\r\n                        )}\r\n                    </IconButton>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell\r\n                    style={{ paddingBottom: 0, paddingTop: 0 }}\r\n                    colSpan={6}\r\n                >\r\n                    <Collapse in={showDetails} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                gutterBottom\r\n                                component=\"div\"\r\n                            >\r\n                                History\r\n                            </Typography>\r\n                            <Card>\r\n                                {item.company}\r\n                                {item.position}\r\n                                {item.stack}\r\n                                {item.link}\r\n                                {item.contact}\r\n                            </Card>\r\n                            {/* <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table> */}\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Application;\r\n","import React, { useState } from \"react\";\r\nimport { addJob } from \"../../actions/jobsActions\";\r\n\r\nimport {\r\n    Grid,\r\n    Button,\r\n    Snackbar,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    TextField,\r\n    InputAdornment,\r\n    MenuItem,\r\n} from \"@material-ui/core\";\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport BusinessIcon from \"@material-ui/icons/Business\";\r\nimport DesktopWindowsIcon from \"@material-ui/icons/DesktopWindows\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst applicationStatus = [\r\n    {\r\n        value: \"0\",\r\n        label: \"Non postulé\",\r\n    },\r\n    {\r\n        value: \"1\",\r\n        label: \"En attente\",\r\n    },\r\n    {\r\n        value: \"2\",\r\n        label: \"En discussion\",\r\n    },\r\n    {\r\n        value: \"3\",\r\n        label: \"Refusé\",\r\n    },\r\n    {\r\n        value: \"4\",\r\n        label: \"Accepté\",\r\n    },\r\n];\r\n\r\nfunction AddApplication(props) {\r\n    \r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [company, setCompany] = useState(\"\");\r\n    const [position, setPosition] = useState(\"\");\r\n    const [stack, setStack] = useState(\"\");\r\n    const [link, setLink] = useState(\"\");\r\n    const [contact, setContact] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [status, setStatus] = useState(\"0\");\r\n    const [error, setError] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n    const handleCloseErrorMessage = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setError(false);\r\n      };\r\n    \r\n\r\n    const handleCompanyChange = (event) => {\r\n        setCompany(event.target.value);\r\n    };\r\n\r\n    const handlePositionChange = (event) => {\r\n        setPosition(event.target.value);\r\n    };\r\n\r\n    const handleStackChange = (event) => {\r\n        setStack(event.target.value);\r\n    };\r\n\r\n    const handleLinkChange = (event) => {\r\n        setLink(event.target.value);\r\n    };\r\n\r\n    const handleContactChange = (event) => {\r\n        setContact(event.target.value);\r\n    };\r\n\r\n    const handleDescriptionChange = (event) => {\r\n        setDescription(event.target.value);\r\n    };\r\n\r\n    const handleCommentChange = (event) => {\r\n        setComment(event.target.value);\r\n    };\r\n\r\n    const handleStatusChange = (event) => {\r\n        setStatus(event.target.value);\r\n    };\r\n\r\n    const handleSubmitApplication = (event) => {\r\n        event.preventDefault();\r\n        const newJob = {\r\n            author: props.user.id,\r\n            company: company,\r\n            position: position,\r\n            stack: stack,\r\n            link: link,\r\n            contact: contact,\r\n            description: description,\r\n            comment: comment,\r\n            status: status,\r\n        };\r\n        addJob(newJob, (res) => {\r\n            console.log(res)\r\n            if (res.status === 400){\r\n                console.log(res.data.error)\r\n                setError(true)\r\n                setErrorMessage(res.data.error)\r\n            }\r\n            else if (res.status === 200){\r\n                console.log(\"blblblbl\")\r\n                handleClose();\r\n                setCompany(\"\");\r\n                setPosition(\"\");\r\n                setStack(\"\");\r\n                setLink(\"\");\r\n                setContact(\"\");\r\n                setDescription(\"\");\r\n                setComment(\"\");\r\n                setStatus(\"\");\r\n                props.onAddApplication(); \r\n            }  \r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n            >\r\n                +\r\n            </Button>\r\n            <Snackbar open={error} autoHideDuration={6000} onClose={handleCloseErrorMessage}>\r\n                <Alert onClose={handleCloseErrorMessage} severity=\"error\">\r\n                    {errorMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Add application</DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"company\"\r\n                        label=\"Company\"\r\n                        type=\"text\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <BusinessIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        fullWidth\r\n                        value={company}\r\n                        onChange={handleCompanyChange}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"position\"\r\n                        label=\"Position\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <DesktopWindowsIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        value={position}\r\n                        onChange={handlePositionChange}\r\n                    />\r\n\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"stack\"\r\n                                label=\"Stack\"\r\n                                type=\"text\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <CodeIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                value={stack}\r\n                                onChange={handleStackChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"link\"\r\n                                label=\"Link\"\r\n                                type=\"text\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <LinkIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                value={link}\r\n                                onChange={handleLinkChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"contact\"\r\n                                label=\"Contact\"\r\n                                type=\"text\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                            <AccountCircle />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                value={contact}\r\n                                onChange={handleContactChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        value={description}\r\n                        onChange={handleDescriptionChange}\r\n                    />\r\n\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"comment\"\r\n                        label=\"Comment\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        value={comment}\r\n                        onChange={handleCommentChange}\r\n                    />\r\n                    <TextField\r\n                        autoFocus\r\n                        select\r\n                        margin=\"dense\"\r\n                        id=\"status\"\r\n                        label=\"Status\"\r\n                        type=\"text\"\r\n                        value={status}\r\n                        onChange={handleStatusChange}\r\n                        fullWidth\r\n                    >\r\n                        {applicationStatus.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmitApplication} color=\"primary\">\r\n                        Add new application\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddApplication;\r\n","import axios from \"axios\";\r\n\r\nimport API_ROUTE from \"../const/param\";\r\n\r\nexport function addJob(data, callback, errorcallback){\r\n\r\n    axios.post(`${API_ROUTE}api/jobs/add`, \r\n    {\r\n        \"author\" : data.author,\r\n        \"company\" : data.company,\r\n        \"position\": data.position,\r\n        \"stack\": data.stack,\r\n        \"link\": data.link,\r\n        \"contact\": data.contact,\r\n        \"description\": data.description,\r\n        \"comment\": data.comment,\r\n        \"status\": data.status,\r\n    }\r\n    )\r\n    .then(response => {\r\n      //do something\r\n      console.log(response)\r\n      if(response.status === 200){\r\n        callback(response);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      // catch error\r\n      console.log(err.response)\r\n      callback(err.response)\r\n    })\r\n  }\r\n\r\n  export function getJobs(data, callback, errorcallback){\r\n    axios.get(`${API_ROUTE}api/jobs`, \r\n    {\r\n        params : {\r\n          author : data.id\r\n        }\r\n    }\r\n    )\r\n    .then(response => {\r\n      //do something\r\n      if(response.status === 200){\r\n        callback(response.data);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      // catch error\r\n      console.log(err)\r\n    })\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getJobs } from \"../../actions/jobsActions\";\r\nimport Application from \"./Application\";\r\nimport AddApplication from \"./AddApplication\";\r\n\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Box,\r\n    Table,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    Paper,\r\n    TableBody\r\n} from \"@material-ui/core\";\r\n\r\nfunction Dashboard(props) {\r\n    const { user } = props.auth;\r\n\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    const handleSubmitApplication = () => {\r\n        setJobs([]); //trigger re rendering of use effect\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (jobs.length === 0) {\r\n            getJobs(user, (res) => {\r\n                setJobs(res);\r\n            });\r\n        }\r\n    }, [jobs, user]);\r\n\r\n    return (\r\n        <Box pt={2}>\r\n            <Container>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"center\"\r\n                    className=\"test\"\r\n                >\r\n                    Hello {user.name}\r\n                </Grid>\r\n\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    className=\"test\"\r\n                >\r\n                    <h2>Mes candidatures</h2>\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"flex-end\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <AddApplication user={user} onAddApplication={handleSubmitApplication}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Container>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        \r\n                        <TableCell align=\"center\">Company</TableCell>\r\n                        <TableCell align=\"center\">Position</TableCell>\r\n                        <TableCell align=\"center\">Stack</TableCell>\r\n                        <TableCell align=\"center\">Comment</TableCell>\r\n                        <TableCell align=\"center\">Status</TableCell>\r\n                        <TableCell />\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {jobs.map((item) => (\r\n                        <Application key={item._id} item={item}/>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n\r\nDashboard.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <Container className=\"footer\">\r\n            <footer>\r\n        blblblb\r\n            </footer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) =>\r\n            auth.isAuthenticated === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport Home from \"./component/Home/Home\";\nimport Navbar from \"./component/Navbar/Navbar\";\nimport Register from \"./component/Auth/Register\";\nimport Login from \"./component/Auth/Login\";\nimport Dashboard from \"./component/Dashboard/Dashboard\";\nimport Footer from \"./component/Footer/Footer\";\nimport PrivateRoute from \"./component/PrivateRoute\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n    // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n        // Logout user\n        store.dispatch(logoutUser());\n        // Redirect to login\n        window.location.href = \"./login\";\n    }\n}\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <div className=\"app\">\n                    <Navbar />\n                    <div className=\"content\">\n                        <Route exact path={process.env.PUBLIC_URL + '/'} component={Home} />\n                        <Route exact path={process.env.PUBLIC_URL + '/register'}  component={Register} />\n                        <Route exact path={process.env.PUBLIC_URL + '/login'}  component={Login} />\n                        <Switch>\n                            <PrivateRoute exact path={process.env.PUBLIC_URL + '/dashboard'}  component={Dashboard} />\n                        </Switch>\n                    </div>\n                    <Footer/>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/home.0d1d09fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/organisation.3d22461b.svg\";","module.exports = __webpack_public_path__ + \"static/media/interview.fb0df896.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.cd3a65e8.svg\";"],"sourceRoot":""}